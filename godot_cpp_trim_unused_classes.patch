diff --git a/SConstruct b/SConstruct
index 191e942..209deed 100644
--- a/SConstruct
+++ b/SConstruct
@@ -60,9 +60,10 @@ if os.name == "nt":
         return rv
 
 
-def add_sources(sources, dir, extension):
+def add_sources(sources, dir, extension, include_only = []):
     for f in os.listdir(dir):
-        if f.endswith("." + extension):
+        if f.endswith('.' + extension) and include_only == [] or\
+            (f.endswith('.' + extension) and os.path.splitext(os.path.basename(f))[0] in include_only):
             sources.append(dir + "/" + f)
 
 
@@ -451,7 +452,7 @@ if should_generate_bindings:
 # Sources to compile
 sources = []
 add_sources(sources, "src/core", "cpp")
-add_sources(sources, "src/gen", "cpp")
+add_sources(sources, "src/gen", "cpp", ['Image', 'Reference', 'Resource', 'Texture', 'ImageTexture', 'File', 'Directory', 'Object', 'Node', 'ConfigFile', 'ProjectSettings', 'ResourceImporter', 'EditorPlugin', 'EditorImportPlugin'])
 
 arch_suffix = env["bits"]
 if env["platform"] == "android":
diff --git a/src/core/GodotGlobal.cpp b/src/core/GodotGlobal.cpp
index 511ed75..b47f26a 100644
--- a/src/core/GodotGlobal.cpp
+++ b/src/core/GodotGlobal.cpp
@@ -185,8 +185,8 @@ void Godot::gdnative_init(godot_gdnative_init_options *options) {
 	godot::_RegisterState::language_index = godot::nativescript_1_1_api->godot_nativescript_register_instance_binding_data_functions(binding_funcs);
 
 	// register these now
-	___register_types();
-	___init_method_bindings();
+	//___register_types();
+	//___init_method_bindings();
 }
 
 void Godot::gdnative_terminate(godot_gdnative_terminate_options *options) {
